"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ensureValidIssuingKey;

var _date = require("../helpers/date");

var _verifierError = _interopRequireDefault(require("../models/verifierError"));

var _verificationSubSteps = require("../constants/verificationSubSteps");

var _useCases = require("../domain/i18n/useCases");

function getCaseInsensitiveKey(obj, value) {
  let key = null;

  for (const prop in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, prop)) {
      if (prop.toLowerCase() === value.toLowerCase()) {
        key = prop;
      }
    }
  }

  return obj[key];
}

function ensureValidIssuingKey(keyMap, txIssuingAddress, txTime) {
  let errorMessage = '';
  const theKey = getCaseInsensitiveKey(keyMap, txIssuingAddress);
  const txTimeToUnixTimestamp = (0, _date.dateToUnixTimestamp)(txTime);

  if (theKey) {
    if (theKey.created && txTimeToUnixTimestamp <= theKey.created) {
      errorMessage = 'invalidIssuingAddressCreationTime';
    }

    if (theKey.revoked && txTimeToUnixTimestamp >= theKey.revoked) {
      errorMessage = 'invalidIssuingAddressRevoked';
    }

    if (theKey.expires && txTimeToUnixTimestamp >= theKey.expires) {
      errorMessage = 'invalidIssuingAddressExpired';
    }
  } else {
    errorMessage = 'invalidIssuingAddressUnknown';
  }

  if (errorMessage) {
    throw new _verifierError.default(_verificationSubSteps.SUB_STEPS.checkAuthenticity, (0, _useCases.getText)('errors', errorMessage));
  }
}