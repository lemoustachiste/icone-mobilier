"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = parseJSON;
Object.defineProperty(exports, "retrieveBlockcertsVersion", {
  enumerable: true,
  get: function () {
    return _retrieveBlockcertsVersion.retrieveBlockcertsVersion;
  }
});
exports.versionParserMap = void 0;

require("core-js/modules/es.promise.js");

var _parseV = _interopRequireDefault(require("./parseV1"));

var _parseV2 = _interopRequireDefault(require("./parseV2"));

var _parseV3 = _interopRequireDefault(require("./parseV3"));

var _retrieveBlockcertsVersion = require("./retrieveBlockcertsVersion");

const versionParserMap = {
  1: _parseV.default,
  2: _parseV2.default,
  3: _parseV3.default
};
exports.versionParserMap = versionParserMap;

async function parseJSON(certificateJson) {
  try {
    const version = (0, _retrieveBlockcertsVersion.retrieveBlockcertsVersion)(certificateJson['@context']);
    const parsedCertificate = await versionParserMap[version](certificateJson);
    parsedCertificate.isFormatValid = true;
    return parsedCertificate;
  } catch (error) {
    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
    return {
      isFormatValid: false,
      error: error.message
    };
  }
}