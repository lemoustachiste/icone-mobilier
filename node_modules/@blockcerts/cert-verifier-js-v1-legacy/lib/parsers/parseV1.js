"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = parseV1;

require("core-js/modules/es.symbol.description.js");

var _domain = _interopRequireDefault(require("../domain"));

var _getSignatureImage = _interopRequireDefault(require("./helpers/getSignatureImage"));

var _constants = require("../constants");

function parseV1(certificateJson) {
  var _certificateJson$docu, _certificateJson$docu2;

  const fullCertificateObject = certificateJson.certificate || certificateJson.document.certificate;
  const recipient = certificateJson.recipient || certificateJson.document.recipient;
  const assertion = certificateJson.document.assertion;
  const receipt = certificateJson.receipt;
  const version = typeof receipt === 'undefined' ? _constants.CERTIFICATE_VERSIONS.V1_1 : _constants.CERTIFICATE_VERSIONS.V1_2;
  let {
    image: certificateImage,
    description,
    issuer,
    subtitle
  } = fullCertificateObject;
  const publicKey = recipient.publicKey;

  const chain = _domain.default.certificates.getChain(publicKey);

  const expires = assertion.expires;
  const id = assertion.uid;
  const issuedOn = assertion.issuedOn;
  const metadataJson = assertion.metadataJson;
  const recipientFullName = `${recipient.givenName} ${recipient.familyName}`;
  const recordLink = assertion.id;
  const revocationKey = recipient.revocationKey || null;
  const sealImage = issuer.image;
  const signature = certificateJson.document.signature;
  const signaturesRaw = (_certificateJson$docu = certificateJson.document) === null || _certificateJson$docu === void 0 ? void 0 : (_certificateJson$docu2 = _certificateJson$docu.assertion) === null || _certificateJson$docu2 === void 0 ? void 0 : _certificateJson$docu2['image:signature'];
  const signatureImage = (0, _getSignatureImage.default)(signaturesRaw, version);

  if (typeof subtitle === 'object') {
    subtitle = subtitle.display ? subtitle.content : '';
  }

  const name = fullCertificateObject.title || fullCertificateObject.name;
  return {
    certificateImage,
    chain,
    description,
    expires,
    id,
    issuedOn,
    issuer,
    metadataJson,
    name,
    publicKey,
    receipt,
    recipientFullName,
    recordLink,
    revocationKey,
    sealImage,
    signature,
    signatureImage,
    subtitle,
    version
  };
}